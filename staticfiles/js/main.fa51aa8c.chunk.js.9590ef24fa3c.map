{"version":3,"sources":["instanceAxios.js","store/actions/food.js","store/actions/actionTypes.js","components/UI/Scanner/Scanner.js","components/UI/CartItem/CartItem.js","components/UI/RemoveItems/RemoveItems.js","store/actions/cart.js","components/UI/Orders/Order.js","components/UI/BackgroundImage/BackgroundImage.js","components/UI/Header/Header.js","components/UI/Menu/Menu.js","components/Pages/HomePage/HomePage.js","utils/settings.js","components/UI/Spinner/Spinner.js","components/Pages/CheckoutPage/CheckoutPage.js","utils/Methods/createJsonData.js","components/Pages/StatusPage/StatusPage.js","components/Routes/Routes.js","App.js","utils/Methods/updateObject.js","store/reducers/food.js","store/reducers/cart.js","index.js"],"names":["instance","axios","create","headers","Accept","xsrfCookieName","xsrfHeaderName","requestFail","error","type","connect","state","restaurantId","food","tableId","dispatch","onInitializeData","payload","initializeRestaurantTable","onFetchFood","get","then","data","fetchFoodSuccess","catch","fetchFood","props","useState","setError","style","width","marginLeft","marginTop","useRef","window","matchMedia","current","matches","onClick","closeQRScanner","className","display","message","delay","onError","err","onScan","ids","split","height","totalQuantity","cart","history","push","color","fontSize","onRemoveItems","Order","href","BackgroundImage","id","backgroundImage","openQRScanner","Header","to","categories","categoriesDetails","loading","onAddItem","item","addItemToCart","currentCategory","setCurrentCategory","role","length","map","category","index","key","aria-controls","data-toggle","updateCategory","title","foods","picture","price","description","qrCodeScanned","setDisplay","options","selection","localization","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","toolbar","nRowsSelected","addRemoveColumns","showColumnsTitle","showColumnsAriaLabel","exportTitle","exportAriaLabel","exportName","searchTooltip","searchPlaceholder","header","actions","body","emptyDataSourceMessage","filterRow","filterTooltip","addTooltip","deleteTooltip","editTooltip","editRow","deleteText","cancelTooltip","saveTooltip","grouping","placeholder","Spinner","class","withRouter","cartItems","totalPrice","updateItems","items","updateCart","onOrderPost","order","post","postOrderSuccess","postOrder","orderNotes","setOrderNotes","value","onChange","event","target","columns","field","editable","quantity","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","data_copy","JSON","parse","stringify","findIndex","parseInt","updateRow","onRowDelete","splice","console","log","deleteRow","keys","values","FormData","i","append","createJsonData","cartItem","StatusPage","orders","this","interval","setInterval","checkOrdersStatus","clearInterval","onCancel","border","status","colspan","Component","orderId","getOrdersStatus","ordersStatus","delete","deleteOrder","cancel","onDeleteAll","Routes","path","exact","component","HomePage","CheckoutPage","App","updateObject","oldObject","newObject","initialState","undefined","initializeRestaurantTableIds","action","requestStart","infos","checkStatus","orderIndex","newOrders","removeAllOrders","reducer","newItems","itemIndex","reduce","acc","rootReducer","combineReducers","foodReducer","cartReducer","persistConfig","storage","persistedReducer","persistReducer","store","createStore","compose","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa51aa8c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\theaders: {\r\n\t\tAccept: 'application/json, text/plain, */*',\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n\t},\r\n\txsrfCookieName: 'csrftoken',\r\n\txsrfHeaderName: 'X-CSRFToken',\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../instanceAxios';\r\n\r\nexport const requestStart = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.REQUEST_START,\r\n\t}\r\n};\r\n\r\nexport const fetchFoodSuccess = (data) => {\r\n\treturn {\r\n\t\ttype: actionTypes.FETCH_FOOD_SUCCESS,\r\n\t\tdata: data\r\n\t}\r\n};\r\n\r\nexport const postOrderSuccess = (data) => {\r\n\treturn {\r\n\t\ttype: actionTypes.POST_ORDER_SUCCESS,\r\n\t\tdata: data\r\n\t}\r\n};\r\n\r\nexport const getOrdersStatus = (data) => {\r\n\treturn {\r\n\t\ttype: actionTypes.GET_ORDERS_STATUS,\r\n\t\tdata: data\r\n\t}\r\n};\r\n\r\nexport const requestFail = (error) => {\r\n\treturn {\r\n\t\ttype: actionTypes.REQUEST_FAIL,\r\n\t\terror: error\r\n\t}\r\n};\r\n\r\n\r\nexport const fetchFood = (restaurantId) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(requestStart());\r\n\t\taxios.get('/luxureally/api/foods/' + restaurantId)\r\n\t\t.then(({data}) => {\r\n\t\t\tdispatch(fetchFoodSuccess(data));\r\n\t\t}).catch(error => {\r\n\t\t\tdispatch(requestFail(error));\r\n\t\t})\r\n\t}\r\n};\r\n\r\nexport const postOrder = (order) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(requestStart());\r\n\t\taxios.post('/luxureally/api/place-order/', order)\r\n\t\t.then(({data}) => {\r\n\t\t\tdispatch(postOrderSuccess(data));\r\n\t\t}).catch(error => {\r\n\t\t\tdispatch(requestFail(error));\r\n\t\t})\r\n\t}\r\n};\r\n\r\nexport const ordersStatus = (orderId) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(requestStart());\r\n\t\taxios.get('/luxureally/api/check-status/' + orderId)\r\n\t\t.then(({data}) => {\r\n\t\t\tdispatch(getOrdersStatus(data));\r\n\t\t}).catch(error => {\r\n\t\t\tdispatch(requestFail(error));\r\n\t\t})\r\n\t}\r\n};\r\n\r\nexport const deleteAllOrders = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.REMOVE_ALL_ORDERS,\r\n\t}\r\n}\r\n\r\nexport const deleteOrder = orderId => {\r\n\treturn {\r\n\t\ttype: actionTypes.DELETE_ORDER,\r\n\t\torderId: orderId,\r\n\t}\r\n}\r\n\r\nexport const cancel = (orderId) => {\r\n\treturn dispatch => {\r\n\t\taxios.delete('/cancel-order/' + orderId)\r\n\t\t.then(({data}) => {\r\n\t\t\tconsole.log(data);\r\n\t\t\tdispatch(deleteOrder(data.id));\r\n\t\t}).catch(error => {\r\n\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const initializeRestaurantTable = (restaurantId, tableId) => {\r\n\treturn {\r\n\t\ttype: actionTypes.INITIALIZE_RESTAURANT_TABLE_IDS,\r\n\t\tpayload: {\r\n\t\t\trestaurantId: restaurantId,\r\n\t\t\ttableId: tableId,\r\n\t\t}\r\n\t}\r\n};","export const INITIALIZE_RESTAURANT_TABLE_IDS = 'INITIALIZE_RESTAURANT_TABLE_IDS';\r\n\r\nexport const REQUEST_START = 'REQUEST_START';\r\nexport const FETCH_FOOD_SUCCESS = 'FETCH_FOOD_SUCCESS';\r\nexport const POST_ORDER_SUCCESS = 'POST_ORDER_SUCCESS';\r\nexport const REQUEST_FAIL = 'REQUEST_FAIL';\r\n\r\nexport const GET_ORDERS_STATUS = 'GET_ORDERS_STATUS';\r\n\r\nexport const ADD_ITEM_TO_CART = 'ADD_ITEM_TO_CART';\r\nexport const UPDATE_CART_ITEMS = 'UPDATE_CART_ITEMS';\r\nexport const REMOVE_ITEMS = 'REMOVE_ITEMS';\r\n\r\nexport const REMOVE_ALL_ORDERS = 'REMOVE_ALL_ORDERS';\r\nexport const DELETE_ORDER = 'DELETE_ORDER';\r\n\r\n","import React, { useState, useRef } from 'react';\r\nimport QrReader from 'react-qr-reader';\r\nimport './Scanner.css';\r\nimport { connect } from 'react-redux';\r\nimport { initializeRestaurantTable, fetchFood } from '../../../store/actions/food';\r\n\r\n\r\nconst Scanner = props => {\r\n\tconst [error, setError] = useState(false);\r\n\tconst x = useRef(window.matchMedia('(max-width: 800px)'));\r\n\r\n\tlet style = {\r\n\t\twidth: '50%',\r\n\t\tmarginLeft: '25%',\r\n\t\tmarginTop: '60%',\r\n\t}\r\n\tif (!x.current.matches) {\r\n\t\tstyle = {\r\n\t\t\twidth: '40%',\r\n\t\t\tmarginLeft: '30%',\r\n\t\t\tmarginTop: '5%',\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleScan = data => {\r\n\t\tif (data !== null) {\r\n\t\t\tconst ids = data.split(' ');\r\n\t\t\tprops.onInitializeData(ids[0], ids[1]);\r\n\t\t\tprops.onFetchFood(ids[0]);\r\n\t\t\tprops.closeQRScanner();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleError = err => {\r\n\t\tsetError(err);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div onClick={props.closeQRScanner} className='Scanner' style={{\r\n\t\t\tdisplay: props.display\r\n\t\t}}>\r\n\t\t{\r\n\t\t\terror ? <div className='Error'>\r\n\t\t\t\t{error.message}\r\n\t\t\t</div> : null\r\n\t\t}\r\n\t\t\t<QrReader \r\n\t\t\t\tdelay={300}\r\n\t\t\t\tonError={handleError}\r\n\t\t\t\tonScan={handleScan}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...style,\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\trestaurantId: state.food.restaurantId,\r\n\t\ttableId: state.food.tableId,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonInitializeData: (restaurantId, tableId) => dispatch(initializeRestaurantTable(restaurantId, tableId)),\r\n\t\tonFetchFood: (restaurantId) => dispatch(fetchFood(restaurantId))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scanner);","import React from 'react';\r\nimport './CartItem.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartItem = props => {\r\n\treturn (\r\n\t\t<div className='CartItem' onClick={() => {props.history.push('/checkout')}}>\r\n\t\t\t<div className=\"icon\" style={{color: 'white', fontSize: '40px'}}><i className=\"flaticon-cutlery\"></i></div>\r\n\t\t\t<div className=\"items-count\">{props.totalQuantity}</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttotalQuantity: state.cart.totalQuantity\r\n\t}\r\n}\r\n\r\nexport default  connect(mapStateToProps)(CartItem);","import React from 'react';\r\nimport './RemoveItems.css';\r\nimport { connect } from 'react-redux';\r\nimport { removeAllItems } from '../../../store/actions/cart';\r\n\r\nconst RemoveItems = props => {\r\n\treturn (\r\n\t\t<div className='RemoveItem' onClick={() => {props.onRemoveItems()}}>\r\n\t\t\t<div style={{color: 'white', fontSize: '12px'}}>Remove Items</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonRemoveItems: ()  => dispatch(removeAllItems()),\r\n\t}\r\n}\r\n\r\nexport default  connect(null, mapDispatchToProps)(RemoveItems);","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const addItemToCart = (item) => {\r\n\treturn {\r\n\t\ttype: actionTypes.ADD_ITEM_TO_CART,\r\n\t\titem: item,\r\n\t}\r\n};\r\n\r\nexport const updateCart = (items) => {\r\n\treturn {\r\n\t\ttype: actionTypes.UPDATE_CART_ITEMS,\r\n\t\titems: items\r\n\t}\r\n};\r\n\r\nexport const removeAllItems = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.REMOVE_ITEMS,\r\n\t}\r\n}\r\n\r\n\t","import React from 'react';\r\nimport './Order.css';\r\n\r\nconst Order = props => {\r\n\treturn (\r\n\t\t<a href=\"/order-status\">\r\n\t\t\t<div className='Order'>\r\n\t\t\t\t<div style={{color: 'white', fontSize: '12px'}}>Orders</div>\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t)\r\n};\r\n\r\n\r\nexport default Order;","import React from 'react';\r\n\r\nconst BackgroundImage = (props) => {\r\n\r\n\treturn (\r\n\t\t<aside id=\"colorlib-hero\">\r\n\t\t\t<div className=\"flexslider\">\r\n\t\t\t\t<ul className=\"slides\">\r\n\t\t\t\t   \t<li style={{ backgroundImage: 'url(images/img_bg_1.jpg)' }}>\r\n\t\t\t\t   \t\t<div className=\"overlay\"></div>\r\n\t\t\t\t   \t\t<div className=\"container-fluid\">\r\n\t\t\t\t   \t\t\t<div className=\"row\">\r\n\t\t\t\t\t   \t\t\t<div className=\"col-md-6 col-sm-12 col-xs-12 col-md-offset-3 slider-text\">\r\n\t\t\t\t\t   \t\t\t\t<div className=\"slider-text-inner text-center\">\r\n\t\t\t\t\t   \t\t\t\t\t<div className=\"desc\">\r\n\t\t\t\t\t   \t\t\t\t\t\t<span className=\"icon\"><i className=\"flaticon-cutlery\"></i></span>\r\n\t\t\t\t\t\t   \t\t\t\t\t<h1>Special &amp; Fresh Food</h1>\r\n\t\t\t\t\t\t   \t\t\t\t\t<p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.</p>\r\n\t\t\t\t\t\t   \t\t\t\t\t<p><button href=\"#\" className=\"btn btn-primary btn-lg btn-learn\" onClick={() => props.openQRScanner()}>\r\n\t\t\t\t\t\t   \t\t\t\t\t\tScan QR Code\r\n\t\t\t\t\t\t   \t\t\t\t\t</button></p>\r\n\t\t\t\t\t\t   \t\t\t\t\t<div className=\"desc2\"></div>\r\n\t\t\t\t\t   \t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t</div>\r\n\t\t\t\t\t   \t\t</div>\r\n\t\t\t\t   \t\t</div>\r\n\t\t\t\t   \t</li>\r\n\t\t\t  \t</ul>\r\n\t\t  \t</div>\r\n\t\t</aside>\r\n\t);\r\n};\r\n\r\nexport default BackgroundImage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t<div className=\"colorlib-navbar-brand\">\r\n\t\t\t\t\t\t\t<Link className=\"colorlib-logo\" to=\"/\"><i className=\"flaticon-cutlery\"></i><span>Lu</span><span>to</span></Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n};\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FILES_BASE_DIR } from '../../../utils/Constants';\r\nimport { addItemToCart } from '../../../store/actions/cart';\r\n\r\nconst Menu = props => {\r\n\tconst [currentCategory, setCurrentCategory] = useState(0)\r\n\r\n\tconst updateCategory = (index) => {\r\n\t\tsetCurrentCategory(index);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"colorlib-menu\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"colorlib-menu-2\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-6 col-md-offset-3 text-center intro-heading\">\r\n\t\t\t\t\t\t\t<span className=\"icon\"><i className=\"flaticon-cutlery\"></i></span>\r\n\t\t\t\t\t\t\t<h2>Restaurant</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-12 text-center\">\r\n\t\t\t\t\t\t\t\t\t<ul className=\"nav nav-tabs text-center\" role=\"tablist\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tprops.categories.length !== 0 ? props.categories.map((category, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <li key={category.id} role=\"presentation\" className={index === currentCategory ? \"active\" : \"\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href={\"#\" + category.id} \r\n\t\t\t\t\t\t\t\t\t\t\t\taria-controls=\"mains\" \r\n\t\t\t\t\t\t\t\t\t\t\t\trole=\"tab\" data-toggle=\"tab\" onClick={(index) => updateCategory(index)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{category.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t}) : null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"tab-content\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprops.categories.length !== 0 ? props.categories.map((category, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <div role=\"tabpanel\" className={\"tab-pane \" + (currentCategory === index ? \"active\" : \"\")} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={category.id} key={category.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ul className=\"menu-dish\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory.foods.map((food) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <li key={food.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                <figure className=\"dish-entry\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                \t<div className=\"dish-img\" style={{ backgroundImage: 'url(' + FILES_BASE_DIR + food.picture + ')' }}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                </figure>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                <div className=\"text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                  <span className=\"price\">{food.price}DHS</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                  <h3>{food.title}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                  <p className=\"cat\">{food.description}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                  <span className=\"btn btn-primary btn-lg btn-learn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                  \tonClick={() => props.onAddItem(food)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                  >+</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t                </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t              \t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t            \t</ul>\r\n\t\t\t\t\t\t\t\t\t\t\t            </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}) : null \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-md-12 text-center\">\r\n\t\t\t\t\t\t\t<p><a href=\"/checkout\" className=\"btn btn-primary btn-outline btn-md\">Checkout</a></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcategories: state.food.categoriesDetails,\r\n\t\tloading: state.food.loading,\r\n\t\terror: state.food.error,\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonAddItem: item => dispatch(addItemToCart(item))\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Scanner from '../../UI/Scanner/Scanner';\r\nimport CartItem from '../../UI/CartItem/CartItem';\r\nimport RemoveItems from '../../UI/RemoveItems/RemoveItems';\r\nimport Order from '../../UI/Orders/Order';\r\nimport BackgroundImage from '../../UI/BackgroundImage/BackgroundImage';\r\nimport Header from '../../UI/Header/Header';\r\nimport Menu from '../../UI/Menu/Menu';\r\n\r\nconst HomePage = (props) => {\r\n\r\n\tconst [display, setDisplay] = useState(false);\r\n\r\n\tconst openQRScanner = () => {\r\n\t\tsetDisplay(true);\r\n\t}\r\n\r\n\tconst closeQRScanner = () => {\r\n\t\tsetDisplay(false)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t <Scanner display={display ? 'block' : 'none'} \r\n       \t\tcloseQRScanner={closeQRScanner} openQRScanner={openQRScanner}\r\n       \t/>\r\n       \t<Order history={props.history} />\r\n       \t<CartItem history={props.history} />\r\n       \t<RemoveItems />\r\n\t<div id=\"colorlib-page\">\r\n\t\t<Header openQRScanner={openQRScanner} />\r\n\t\t<BackgroundImage openQRScanner={openQRScanner} />\r\n\t\t<div className=\"goto-here\"></div>\r\n\t\t{\r\n\t\t\t!props.qrCodeScanned ? <div className=\"colorlib-menu\">\r\n\t\t\t\t<div className=\"container col-md-12 text-center\">\r\n\t\t\t\t\t<button className=\"btn btn-primary btn-lg btn-learn\" onClick={() => openQRScanner()}>\r\n\t\t\t\t\tScan QR Code to view menu\r\n\t\t\t\t</button></div></div> : <Menu />\r\n\t\t}\r\n\t\t\r\n\t</div>\r\n\t</>\r\n\t)\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcategories: state.food.categories,\r\n\t\tqrCodeScanned: state.food.qrCodeScanned,\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);","export const options = {\r\n        selection: true,\r\n    };\r\n\r\nexport const localization = {\r\n    pagination: {\r\n        labelDisplayedRows: '{from}-{to} sur {count}',\r\n        labelRowsSelect: 'lignes',\r\n        labelRowsPerPage: 'Lignes par page',\r\n        firstAriaLabel: 'Première Page',\r\n        firstTooltip: 'Première Page',\r\n        previousAriaLabel: 'Page précédente',\r\n        previousTooltip: 'Page précédente',\r\n        nextAriaLabel: 'Page suivante',\r\n        nextTooltip: 'Page suivante',\r\n        lastAriaLabel: 'Dernière Page',\r\n        lastTooltip: 'Dernière Page',\r\n    },\r\n    toolbar: {\r\n        nRowsSelected: '{0} ligne(s) sélectionnée(s)',\r\n        addRemoveColumns: 'Ajouter ou Supprimer des colonnes',\r\n        showColumnsTitle: 'Afficher les colonnes',\r\n        showColumnsAriaLabel: 'Afficher les colonnes',\r\n        exportTitle: 'Exporter',\r\n        exportAriaLabel: 'Exporter',\r\n        exportName: 'Exporter sous forme CSV',\r\n        searchTooltip: 'Rechercher',\r\n        searchPlaceholder: 'Rechercher',\r\n    },\r\n    header: {\r\n        actions: 'Actions',\r\n    },\r\n    body: {\r\n        emptyDataSourceMessage: 'Aucun résultat à afficher',\r\n        filterRow: {\r\n            filterTooltip: 'Filtrer',\r\n        },\r\n        addTooltip: 'Ajouter',\r\n        deleteTooltip: 'Supprimer',\r\n        editTooltip: 'Modifier',\r\n        editRow: {\r\n            deleteText: 'Êtes vous sûr de vouloir supprimer cette ligne ?',\r\n            cancelTooltip: 'Annuler',\r\n            saveTooltip: 'Enregistrer'\r\n        },\r\n        grouping: {\r\n            placeholder: 'Déplacez les entêtes pour faire un group by'\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = props => {\r\n\treturn (\r\n\t\t<div class=\"lds-hourglass\"></div>\r\n\t)\r\n};\r\n\r\nexport default Spinner;","import React, { useState } from 'react';\r\nimport './CheckoutPage.css';\r\nimport { connect } from 'react-redux';\r\nimport { options, localization } from '../../../utils/settings';\r\nimport { createJsonData } from '../../../utils/Methods/createJsonData';\r\nimport MaterialTable from \"material-table\";\r\nimport { updateCart } from '../../../store/actions/cart';\r\nimport { postOrder } from '../../../store/actions/food';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\n\r\nconst CheckoutPage = (props) => {\r\n\tconst { cartItems, updateItems, totalPrice, \r\n        totalQuantity, tableId, onOrderPost, loading } = props;\r\n    const [ orderNotes, setOrderNotes ] = useState('');\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Title',\r\n\t\t\tfield: 'title',\r\n            editable: 'never'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Price',\r\n\t\t\tfield: 'price',\r\n            editable: 'never'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Quantity',\r\n\t\t\tfield: 'quantity'\r\n\t\t}\r\n\t];\r\n    const handleChange = event => {\r\n        setOrderNotes(event.target.value);\r\n    };\r\n\r\n    const placeOrder = () => {\r\n        const order = createJsonData(['table', 'total_price', 'details', 'notes'], \r\n            [tableId, totalPrice, [\r\n                cartItems.map(cartItem => [cartItem.id, cartItem.quantity])\r\n            ], orderNotes]);\r\n        onOrderPost(order);\r\n        props.history.push('/order-status');\r\n    };\r\n\r\n    const updateRow = (newData, oldData) => {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                let data_copy = JSON.parse(JSON.stringify(cartItems));\r\n                let index = data_copy.findIndex(item => item.title === newData.title);\r\n                data_copy[index].quantity = parseInt(newData.quantity);\r\n                updateItems(data_copy);\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n    };\r\n\r\n    const deleteRow = (oldData) => {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                let data_copy = JSON.parse(JSON.stringify(cartItems));\r\n                let index = data_copy.findIndex(item => item.title === oldData.title);\r\n                data_copy.splice(index, 1);\r\n                console.log(data_copy);\r\n                updateItems(data_copy);\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n    };\r\n\r\n\treturn (\r\n\t\t<div className=\"Checkout\">\r\n                <div className=\"col-md-8 text-center textarea\">\r\n                    <textarea value={orderNotes} onChange={handleChange} placeholder=\"Order details\">\r\n                    </textarea>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                {\r\n                    !loading ? <MaterialTable\r\n                    title={\"Checkout\"}\r\n                    columns={columns}\r\n                    data={cartItems.map(item => {\r\n                            return {\r\n                                title: item.title,\r\n                                price: item.price,\r\n                                quantity: item.quantity\r\n                            }\r\n                        })\r\n                    }\r\n                    options={options}\r\n                    editable={{\r\n                        onRowUpdate: (newData, oldData) => updateRow(newData, oldData),\r\n                        onRowDelete: oldData => deleteRow(oldData)\r\n                    }}\r\n                    localization={localization}\r\n                    /> : <Spinner />\r\n                }\r\n                </div>\r\n            <div className=\"col-md-3 text-center summary\">Total Price: {totalPrice} DHS Total Meals: {totalQuantity}</div>\r\n            <div className=\"col-md-12 text-center\">\r\n                <p><button className=\"btn btn-primary btn-outline btn-md\" onClick={placeOrder}>Place Order</button></p>\r\n            </div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cartItems: state.cart.cartItems,\r\n        totalQuantity: state.cart.totalQuantity,\r\n        totalPrice: state.cart.totalPrice,\r\n        tableId: state.food.tableId,\r\n        loading: state.food.loading,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateItems: items => dispatch(updateCart(items)),\r\n        onOrderPost: order => dispatch(postOrder(order))\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CheckoutPage));","export const createJsonData = (keys, values) => {\r\n\tconst data = new FormData();\r\n\tfor(let i = 0; i < values.length; i++) {\r\n\t\tdata.append(keys[i], values[i]);\r\n\t}\r\n\treturn data;\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ordersStatus, cancel, deleteAllOrders } from '../../../store/actions/food';\r\nimport './StatusPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass StatusPage extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { orders } = this.props;\r\n\t\tconsole.log(orders);\r\n\t\tthis.interval = setInterval(() => {\r\n\t\t\tfor (let i = 0; i < orders.length; i++) {\r\n\t\t\t\tthis.props.checkOrdersStatus(orders[i].id);\r\n\t\t\t}\r\n\t\t}, 60 * 1000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.interval);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { orders, onCancel } = this.props;\r\n\t\treturn (\r\n\t\t<div className='Status'>\r\n\t\t\t<table border=\"1\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t<th>Price</th>\r\n\t\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t\t<th>Actions</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t {\r\n\t\t\t\t\t \torders.length !== 0 ?\r\n\t\t\t\t\t \torders.map(order => (\r\n\t\t\t\t\t \t\t<tr key={order.id}>\r\n\t\t\t\t\t \t\t\t<td>{order.id}</td>\r\n\t\t\t\t\t \t\t\t<td>{order.price}</td>\r\n\t\t\t\t\t \t\t\t<td>{order.status}</td>\r\n\t\t\t\t\t \t\t\t<td><button onClick={() => onCancel(order.id)} className=\"btn btn-outline btn-primary btn-md\">\r\n\t\t\t\t\t \t\t\t\tCancel\r\n\t\t\t\t\t \t\t\t\t</button>\r\n\t\t\t\t\t \t\t\t</td>\r\n\t\t\t\t\t \t\t</tr>\r\n\t\t\t\t\t \t)) : <td colspan=\"4\">You haven't ordered a meal yet. Go back to <Link to=\"/\">Home Page</Link> </td>\r\n\t\t\t\t\t }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\torders: state.food.orders,\r\n\t\trestaurantId: state.food.restaurantId,\r\n\t\ttableId: state.food.tableId,\r\n\t}\r\n};\r\n\r\nconst mapDisptachToProps = dispatch => {\r\n\treturn {\r\n\t\tcheckOrdersStatus: (orderId) => dispatch(ordersStatus(orderId)),\r\n\t\tonCancel: (orderId) =>  dispatch(cancel(orderId)),\r\n\t\tonDeleteAll: () => dispatch(deleteAllOrders()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDisptachToProps)(StatusPage);","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport HomePage from '../Pages/HomePage/HomePage';\r\nimport CheckoutPage from '../Pages/CheckoutPage/CheckoutPage';\r\nimport StatusPage from '../Pages/StatusPage/StatusPage';\r\n\r\nconst Routes = props => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={\"/\"} exact component={HomePage} />\r\n\t\t\t<Route path={\"/checkout\"} component={CheckoutPage} />\r\n\t\t\t<Route path={\"/order-status\"} component={StatusPage} />\r\n\t\t</Switch>\r\n\t)\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport Routes from './components/Routes/Routes';\n\n\nconst App = (props) => {\n\n  \treturn (\n\t    <Routes />\n  );\n\n};\n\n\nexport default App;\n","export const updateObject = (oldObject, newObject) => {\r\n\treturn {\r\n\t\t...oldObject,\r\n\t\t...newObject,\r\n\t}\r\n};","import * as actionTypes from './../actions/actionTypes';\r\nimport { updateObject } from './../../utils/Methods/updateObject';\r\n\r\nconst initialState = {\r\n\trestaurantId: undefined,\r\n\ttableId: undefined,\r\n\tcategoriesDetails: [],\r\n\tloading: false,\r\n\terror: null,\r\n\tqrCodeScanned: false,\r\n\torders: [],\r\n};\r\n\r\nconst initializeRestaurantTableIds = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\trestaurantId: action.payload.restaurantId,\r\n\t\ttableId: action.payload.tableId,\r\n\t})\r\n}\r\n\r\nconst requestStart = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\tloading: true\r\n\t})\r\n};\r\n\r\nconst fetchFoodSuccess = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\tcategoriesDetails: action.data.infos,\r\n\t\tloading: false,\r\n\t\terror: null,\r\n\t\tqrCodeScanned: true,\r\n\t})\r\n};\r\n\r\nconst postOrder = (state, action) => {\r\n\tconst orders = [...state.orders];\r\n\torders.push(action.data);\r\n\treturn updateObject(state, {\r\n\t\tloading: false,\r\n\t\terror: null,\r\n\t\torders: orders,\r\n\t})\r\n};\r\n\r\nconst checkStatus = (state, action) => {\r\n\tconst orders = [...state.orders];\r\n\tconst orderIndex = orders.findIndex(order => order.id === action.data.id);\r\n\torders[orderIndex].status = action.data.status;\r\n\treturn updateObject(state, {\r\n\t\tloading: false,\r\n\t\terror: null,\r\n\t\torders: orders,\r\n\t})\r\n};\r\n\r\n\r\n\r\nconst requestFail = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\tloading: false,\r\n\t\terror: action.error.message,\r\n\t})\r\n};\r\n\r\nconst deleteOrder = (state, action) => {\r\n\tconst newOrders = [...state.orders];\r\n\tconst index = newOrders.findIndex(order => order.id === action.orderId);\r\n\tif (index !== - 1) {\r\n\t\tnewOrders.splice(index, 1);\r\n\t}\r\n\treturn updateObject(state, {\r\n\t\torders: newOrders\r\n\t})\r\n}\r\n\r\nconst removeAllOrders = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\torders: [],\r\n\t})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase actionTypes.INITIALIZE_RESTAURANT_TABLE_IDS:\r\n\t\t \treturn initializeRestaurantTableIds(state, action);\r\n\t\tcase actionTypes.REQUEST_START:\r\n\t\t\treturn requestStart(state, action);\r\n\t\tcase actionTypes.FETCH_FOOD_SUCCESS:\r\n\t\t\treturn fetchFoodSuccess(state, action);\r\n\t\tcase actionTypes.GET_ORDERS_STATUS:\r\n\t\t\treturn checkStatus(state, action);\r\n\t\tcase actionTypes.POST_ORDER_SUCCESS:\r\n\t\t\treturn postOrder(state, action);\r\n\t\tcase actionTypes.REQUEST_FAIL:\r\n\t\t\treturn requestFail(state, action);\r\n\t\tcase actionTypes.DELETE_ORDER:\r\n\t\t\treturn deleteOrder(state, action);\r\n\t\tcase actionTypes.REMOVE_ALL_ORDERS:\r\n\t\t\t return removeAllOrders(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from './../actions/actionTypes';\r\n\r\nconst initialState = {\r\n\tcartItems: [],\r\n\ttotalQuantity: 0,\r\n\ttotalPrice: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase actionTypes.ADD_ITEM_TO_CART:\r\n\t\t\tconsole.log(action.item);\r\n\t\t\tlet newItems = [...state.cartItems]\r\n\t\t\tlet itemIndex = newItems.findIndex(item => item.id === action.item.id);\r\n\t\t\tif (itemIndex !== -1) {\r\n\t\t\t\tnewItems[itemIndex].quantity++;\r\n\t\t\t} else {\r\n\t\t\t\tnewItems.push({\r\n\t\t\t\t\t...action.item,\r\n\t\t\t\t\tquantity: 1,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tconsole.log(state.cartItems);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcartItems: newItems,\r\n\t\t\t\ttotalQuantity: state.totalQuantity + 1,\r\n\t\t\t\ttotalPrice: newItems.reduce((acc, item) => acc + (item.price * item.quantity), 0)\r\n\t\t\t};\r\n\t\tcase actionTypes.UPDATE_CART_ITEMS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcartItems: action.items,\r\n\t\t\t\ttotalQuantity: action.items.reduce((acc, item) => acc + item.quantity, 0),\r\n\t\t\t\ttotalPrice: action.items.reduce((acc, item) => acc + (item.price * item.quantity), 0)\r\n\t\t\t};\r\n\t\tcase actionTypes.REMOVE_ITEMS:\r\n\t\t\treturn initialState;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}; \r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport foodReducer from './store/reducers/food';\nimport cartReducer from './store/reducers/cart';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nconst rootReducer = combineReducers({\n\tfood: foodReducer,\n\tcart: cartReducer,\n})\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst store = createStore(persistedReducer, compose(\n\tapplyMiddleware(thunk)\n));\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t<Router>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</PersistGate>\n\t</Provider>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}